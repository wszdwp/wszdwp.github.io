<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codingpan&#39;s Blog</title>
    <description></description>
    <link>/wszdwp.github.io/</link>
    <atom:link href="/wszdwp.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 31 May 2017 12:07:07 -0400</pubDate>
    <lastBuildDate>Wed, 31 May 2017 12:07:07 -0400</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Cancel http request task in iOS</title>
        <description>&lt;ol&gt;
  &lt;li&gt;Create &lt;code class=&quot;highlighter-rouge&quot;&gt;NSURLSession&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;NSURLSessionDataTask&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Init &lt;code class=&quot;highlighter-rouge&quot;&gt;NSURLSessionDataTask&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;dataTaskWithRequest()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Exsited &lt;code class=&quot;highlighter-rouge&quot;&gt;NSURLSessionDataTask&lt;/code&gt; can be &lt;code class=&quot;highlighter-rouge&quot;&gt;cancel()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Created &lt;code class=&quot;highlighter-rouge&quot;&gt;NSURLSessionDataTask&lt;/code&gt; can be start by &lt;code class=&quot;highlighter-rouge&quot;&gt;resume()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;defaultSession&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSURLSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSURLSessionConfiguration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;defaultSessionConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dataTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSURLSessionDataTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dataTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSURLSessionDataTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSURLSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dataTaskWithRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dataTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dataTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ps: in dataTaskWithRequest, completionHandller is run on background by default&lt;/p&gt;

&lt;p&gt;In searchBar textDidChange,&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;searchBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;searchBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UISearchBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;textDidChange&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;searchText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MIN_QUERY_LEN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cancel request task&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;requestType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MyRequestType1&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;requestURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://myservice/myserviceType?&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;requestBody&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;amp;param1=001&amp;amp;param2=002&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestURL&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            
            &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;NSMutableURLRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSMutableURLRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;cachePolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSURLRequestCachePolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ReloadIgnoringLocalCacheData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;timeoutInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;60.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;HTTPMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;HTTPBody&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestBody&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dataUsingEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;NSUTF8StringEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;// This completion block is run on background by default, no need to dispatch it to background using GCD. &lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dataTaskWithRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localizedDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;httpResponse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSHTTPURLResponse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;statusCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;// Dispatch to main queue if need dealing with response data in main queue&lt;/span&gt;
                        &lt;span class=&quot;nf&quot;&gt;dispatch_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dispatch_get_main_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;c1&quot;&gt;//TODO: deal with response data&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            
            &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;refs:&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/reference/foundation/nsurlsession?language=objc&quot;&gt;https://developer.apple.com/reference/foundation/nsurlsession?language=objc&lt;/a&gt;
&lt;a href=&quot;https://developer.apple.com/reference/foundation/nsurlsessiontask&quot;&gt;https://developer.apple.com/reference/foundation/nsurlsessiontask&lt;/a&gt;
&lt;a href=&quot;https://stackoverflow.com/questions/31345250/how-to-cancel-on-going-http-request-in-swift&quot;&gt;https://stackoverflow.com/questions/31345250/how-to-cancel-on-going-http-request-in-swift&lt;/a&gt;
&lt;a href=&quot;https://stackoverflow.com/questions/31746229/does-nsurlsession-for-http-data-task-nsurlsessiondatatask-runs-in-background-t&quot;&gt;https://stackoverflow.com/questions/31746229/does-nsurlsession-for-http-data-task-nsurlsessiondatatask-runs-in-background-t&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://stackoverflow.com/questions/19099448/send-post-request-using-nsurlsession&quot;&gt;https://stackoverflow.com/questions/19099448/send-post-request-using-nsurlsession&lt;/a&gt;&lt;a href=&quot;https://www.raywenderlich.com/110458/nsurlsession-tutorial-getting-started&quot;&gt;https://www.raywenderlich.com/110458/nsurlsession-tutorial-getting-started&lt;/a&gt; 
&lt;a href=&quot;https://stackoverflow.com/questions/21918722/how-do-i-use-nsoperationqueue-with-nsurlsession&quot;&gt;https://stackoverflow.com/questions/21918722/how-do-i-use-nsoperationqueue-with-nsurlsession&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 31 May 2017 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2017/05/31/Cancel-HTTP-Request-in-iOS.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2017/05/31/Cancel-HTTP-Request-in-iOS.html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>Debug tools in Android</title>
        <description>&lt;h1 id=&quot;android&quot;&gt;Android&lt;/h1&gt;

&lt;h2 id=&quot;view-sqlite-of-android-app-in-chrome-dev-tools&quot;&gt;View SQLite of Android App in Chrome Dev Tools&lt;/h2&gt;

&lt;p&gt;Stetho - A debug bridge for Android applications from Facebook&lt;br /&gt;
&lt;a href=&quot;http://facebook.github.io/stetho/&quot;&gt;http://facebook.github.io/stetho/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Prerequisites: Android studio with android device connectted.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In build.gradle&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gradle&quot; data-lang=&quot;gradle&quot;&gt;&lt;span class=&quot;k&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Stetho core&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.facebook.stetho:stetho:1.5.0&#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;com.facebook.stetho:stetho-js-rhino:1.4.2&#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;In Application&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
        &lt;span class=&quot;c1&quot;&gt;// Init Stetho &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Stetho&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initializeWithDefaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In your Chrome, type &lt;code class=&quot;highlighter-rouge&quot;&gt;chrome://inspect/&lt;/code&gt;, select your connected device to debug&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In Chrome Developer Tools, select Resources on top toolbar and select Web SQL on left tool pane for checking data in your SQLite. You can type in and run sql query in right command area(not the bottom console area).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 22 May 2017 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2017/05/22/Debug-Tools-in-Android.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2017/05/22/Debug-Tools-in-Android.html</guid>
        
        <category>Android</category>
        
        
      </item>
    
      <item>
        <title>Capture done button onclick event in android</title>
        <description>&lt;h1 id=&quot;capture-done-button-onclick-event-in-android&quot;&gt;Capture done button onclick event in android&lt;/h1&gt;

&lt;h2 id=&quot;jellybean-and-higher&quot;&gt;JellyBean and higher&lt;/h2&gt;
&lt;p&gt;OnEditorActionListener is needed to listen for ‘enter’ or ‘next’ and you cannot use OnKeyListener.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;editText.setOnEditorActionListener(new OnEditorActionListener() {
    @Override
    public boolean onEditorAction(TextView view, int actionId, KeyEvent event) {
        int result = actionId &amp;amp; EditorInfo.IME_MASK_ACTION;
        switch(result) {
        case EditorInfo.IME_ACTION_DONE:
            // done stuff
            return true;
            break;
        case EditorInfo.IME_ACTION_NEXT:
            // next stuff
            return true;
            break;
        }
        return false;
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Refs:&lt;br /&gt;
&lt;a href=&quot;https://developer.android.com/reference/android/view/KeyEvent.html&quot;&gt;Key Event&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 31 Mar 2017 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2017/03/31/Capture-Done-OnClick-in-Android.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2017/03/31/Capture-Done-OnClick-in-Android.html</guid>
        
        <category>Android</category>
        
        
      </item>
    
      <item>
        <title>Location in iOS</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://support.apple.com/en-us/HT203033&quot;&gt;Location in iOS&lt;/a&gt;
Crowd-sourced Wi-Fi and cellular Location Services&lt;/p&gt;

&lt;p&gt;If Location Services is on, your device will periodically send the geo-tagged locations of nearby Wi-Fi hotspots and cell towers to Apple to augment Apple’s crowd-sourced database of Wi-Fi hotspot and cell tower locations. If you’re traveling (for example, in a car) and Location Services is on, a GPS-enabled iOS device will also periodically send GPS locations and travel speed information to Apple to be used for building up Apple’s crowd-sourced road-traffic database. The crowd-sourced location data gathered by Apple is anonymous and encrypted. It doesn’t personally identify you.
Learn more about Location Services and Privacy.&lt;/p&gt;

&lt;key&gt;UIRequiredDeviceCapabilities&lt;/key&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;array&amp;gt;
    &amp;lt;string&amp;gt;armv7&amp;lt;/string&amp;gt;
    &amp;lt;string&amp;gt;gps&amp;lt;/string&amp;gt;
    &amp;lt;string&amp;gt;location-services&amp;lt;/string&amp;gt;
&amp;lt;/array&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 08 Mar 2017 00:00:00 -0500</pubDate>
        <link>/wszdwp.github.io/2017/03/08/Location-in-iOS.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2017/03/08/Location-in-iOS.html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>WWDC video timeline notes</title>
        <description>&lt;h1 id=&quot;wwdc-2011&quot;&gt;WWDC 2011&lt;/h1&gt;

&lt;h2 id=&quot;blocks-and-grand-central-dispatch-in-practicehttpsdeveloperapplecomvideosplaywwdc2011308&quot;&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/&quot;&gt;Blocks and Grand Central Dispatch in Practice&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=300&quot;&gt;05:00&lt;/a&gt; &lt;strong&gt;Block&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=483&quot;&gt;08:03&lt;/a&gt; &lt;strong&gt;__block&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=630&quot;&gt;10:30&lt;/a&gt; &lt;strong&gt;Enumeration using block&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=675&quot;&gt;11:15&lt;/a&gt; &lt;strong&gt;Callbacks using block&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=707&quot;&gt;11:47&lt;/a&gt; &lt;strong&gt;Grand Central Dispatch&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=830&quot;&gt;13:50&lt;/a&gt; &lt;strong&gt;Queues&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=885&quot;&gt;14:45&lt;/a&gt; &lt;strong&gt;Throughput efficiency vs contention, Queues vs Locks&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1024&quot;&gt;17:04&lt;/a&gt; &lt;strong&gt;Dispatch Fundamentals(important)&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1048&quot;&gt;17:28&lt;/a&gt; &lt;strong&gt;dispatch_queue_t&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1102&quot;&gt;18:22&lt;/a&gt; &lt;strong&gt;dispatch_sync&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1237&quot;&gt;20:37&lt;/a&gt; &lt;strong&gt;dispatch_sync advanced patterns&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1279&quot;&gt;21:19&lt;/a&gt; &lt;strong&gt;nested dispatch_sync will deadlock&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1413&quot;&gt;23:33&lt;/a&gt; &lt;strong&gt;dispatch_apply&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1513&quot;&gt;25:13&lt;/a&gt; &lt;strong&gt;hidden locks in dispatch_apply&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1540&quot;&gt;25:40&lt;/a&gt; &lt;strong&gt;Striding with dispatch_apply&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1718&quot;&gt;28:38&lt;/a&gt; &lt;strong&gt;dispatch_async&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1872&quot;&gt;31:12&lt;/a&gt; &lt;strong&gt;nested dispatch_async example&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=1916&quot;&gt;31:56&lt;/a&gt; &lt;strong&gt;cleaner nested dispatch_aync example&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=2007&quot;&gt;33:27&lt;/a&gt; &lt;strong&gt;Caveat in using dispatch_async&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=2071&quot;&gt;34:31&lt;/a&gt; &lt;strong&gt;Memoery management&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=2153&quot;&gt;35:53&lt;/a&gt; &lt;strong&gt;Inside block(important)&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=2162&quot;&gt;36:02&lt;/a&gt; &lt;strong&gt;Block_copy() and Block_release()&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/308/?time=2634&quot;&gt;43:54&lt;/a&gt; &lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;mastering-grand-central-dispatchhttpsdeveloperapplecomvideosplaywwdc2011210&quot;&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/210/&quot;&gt;Mastering Grand Central Dispatch&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;objective-c-advancements-in-depthhttpsdeveloperapplecomvideosplaywwdc2011322&quot;&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2011/322/&quot;&gt;Objective-C Advancements In-Depth&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;getting-started-with-swifthttpsdeveloperapplecomvideosplaywwdc2016404&quot;&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/404/&quot;&gt;Getting Started with Swift&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/404/?time=959&quot;&gt;41:00&lt;/a&gt; &lt;strong&gt;Struct vs Class&lt;/strong&gt; &lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/404/?time=959&quot;&gt;47:01&lt;/a&gt; &lt;strong&gt;Protocol vs Extension&lt;/strong&gt; &lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/404/?time=959&quot;&gt;48:06&lt;/a&gt; &lt;strong&gt;Enum&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;protocol-and-value-oriented-programming-in-uikit-appshttpsdeveloperapplecomvideosplaywwdc2016419&quot;&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/419/&quot;&gt;Protocol and Value Oriented Programming in UIKit Apps&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;protocol-oriented-programming-in-swifthttpsdeveloperapplecomvideosplaywwdc2015408&quot;&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2015/408/&quot;&gt;Protocol-Oriented Programming in Swift&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;References:&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/library/content/documentation/General/Conceptual/ConcurrencyProgrammingGuide/Introduction/Introduction.html&quot;&gt;Concurrency Programming Guide&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Conceptual/ConcurrencyProgrammingGuide/OperationQueues/OperationQueues.html&quot;&gt;OperationQueues&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Jan 2017 00:00:00 -0500</pubDate>
        <link>/wszdwp.github.io/2017/01/15/WWDC-Notes.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2017/01/15/WWDC-Notes.html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>Learn iOS From Questions</title>
        <description>&lt;h1 id=&quot;uiviews&quot;&gt;UIViews&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;On a UITableViewCell constructor: &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;
-(id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier
&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What is the reuseIdentifier used for?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Difference between atomic and nonatomic synthesized properties?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;copy vs retain&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is method swizzling in Objective C and why would you use it?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What’s the difference between not-running, inactive, active, background and suspended execution states?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is a category and when is it used? 
A category is a way of adding additional methods to a class without extending it. It is often used to add a collection of related methods. A common use case is to add additional methods to built in classes in the Cocoa frameworks. For example adding async download methods to the UIImage class.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you spot the bug in the following code and suggest how to fix it:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the difference between viewDidLoad and viewDidAppear? Which should you use to load data from a remote server to display in the view?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What considerations do you need when writing a UITableViewController which shows images downloaded from a remote server?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is a protocol, how do you define your own and when is it used?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is KVC and KVO? Give an example of using KVC to set a value.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are blocks and how are they used?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What mechanisms does iOS provide to support multi-threading?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot;&gt;//1. NSThread creates a new low-level thread which can be started by calling the start method.
NSThread* myThread = [[NSThread alloc] initWithTarget:self
                                      selector:@selector(myThreadMainMethod:)
                                      object:nil];
[myThread start];

//2. NSOperationQueue allows a pool of threads to be created and used to execute NSOperations in parallel. NSOperations can also be run on the main thread by asking NSOperationQueue for the mainQueue.
NSOperationQueue* myQueue = [[NSOperationQueue alloc] init];
[myQueue addOperation:anOperation]; 
[myQueue addOperationWithBlock:^{
 /* Do something. */
}];

//3. GCD or Grand Central Dispatch is a modern feature of Objective-C that provides a rich set of methods and API&#39;s to use in order to support common multi-threading tasks. GCD provides a way to queue tasks for dispatch on either the main thread, a concurrent queue (tasks are run in parallel) or a serial queue (tasks are run in FIFO order).
dispatch_queue_t myQueue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
dispatch_async(myQueue, ^{
  printf(&quot;Do some work here.\n&quot;);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;What is the Responder Chain?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What’s the difference between using a delegate and notification?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;memory-management&quot;&gt;Memory Management&lt;/h1&gt;

&lt;p&gt;Two category of wrong memeory management:&lt;br /&gt;
1. Release some memory you are still using &lt;br /&gt;
2. Not release memory you are not using&lt;/p&gt;

&lt;p&gt;reference count, when reference count is 0, deallocation &lt;br /&gt;
strong, retain, copy  +1&lt;br /&gt;
weak 0&lt;br /&gt;
release  -1&lt;/p&gt;

&lt;p&gt;constructor vs convenience constructor&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;// constructor
- (void)reset {
    NSNumber *zero = [[NSNumber alloc] initWithInteger:0];
    [self setCount:zero];
    [zero release];
}

// convenience constructor
- (void)reset {
    NSNumber *zero = [NSNumber numberWithInteger:0];
    [self setCount:zero];
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;assign for primitive type&lt;br /&gt;
retain for reference type&lt;/p&gt;

&lt;p&gt;nonatomic for non thread safe&lt;br /&gt;
atomic for thread safe&lt;/p&gt;

&lt;p&gt;readwrite, readonly for I/O permission&lt;/p&gt;

&lt;p&gt;References &lt;br /&gt;
&lt;a href=&quot;https://www.codementor.io/ios/tutorial/ios-interview-tips-questions-answers-objective-c&quot;&gt;20 iOS Developer Interview Questions&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Jan 2017 00:00:00 -0500</pubDate>
        <link>/wszdwp.github.io/2017/01/10/Learn-iOS-From-Questions.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2017/01/10/Learn-iOS-From-Questions.html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>Migration from Swift 2.X to Swift 3.0</title>
        <description>&lt;h1 id=&quot;swift-2x-to-swift-30&quot;&gt;Swift 2.X to Swift 3.0&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;id in Objective-C is not AnyObject but Any, casting using as&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AnyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boolValue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;errMsg:UnsafeMutablePointer&amp;lt;UnsafeMutablePointer&lt;Int8&gt;?&amp;gt; in C API as char **, change to&lt;/Int8&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;errMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UnsafeMutablePointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 14 Oct 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/10/14/Migration-From-Swift-2.X-to-Swift-3.0.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/10/14/Migration-From-Swift-2.X-to-Swift-3.0.html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>CollectionTypes in Python</title>
        <description>&lt;h1 id=&quot;create-dict&quot;&gt;Create Dict&lt;/h1&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## 1&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xrange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## 2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xrange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 06 Oct 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/10/06/CollectionTypes-in-Python.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/10/06/CollectionTypes-in-Python.html</guid>
        
        <category>Python</category>
        
        
      </item>
    
      <item>
        <title>SQLite in iOS</title>
        <description>&lt;p&gt;SQL in iOS&lt;/p&gt;

&lt;p&gt;SQLite&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;open&lt;/li&gt;
  &lt;li&gt;prepare&lt;/li&gt;
  &lt;li&gt;step&lt;/li&gt;
  &lt;li&gt;finalize&lt;/li&gt;
  &lt;li&gt;close&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;execute an SQL query, it must first be compiled into a byte-code program&lt;/p&gt;

&lt;p&gt;```sqlite3_exec() = ‘ sqlite3_prepare_v2(), sqlite3_step(), and sqlite3_finalize(),’&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//Open&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sqlite3_open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;databasePath&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UTF8String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mySqliteDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SQLITE_OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Close&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;sqlite3_close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mySqliteDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Execute SQL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sqlite3_exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mySqliteDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UTF8String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SQLITE_OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.safaribooksonline.com/library/view/using-sqlite/9781449394592/re325.html&quot;&gt;sqlite3_step&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;COpaquePointer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sqlite3_prepare_v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mySqliteDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectSql&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UTF8String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SQLITE_OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sqlite3_step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SQLITE_ROW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rowid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sqlite3_column_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;sqlite3_finalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;sqlite3_close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mySqliteDB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 27 Sep 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/09/27/SQLite-in-iOS.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/09/27/SQLite-in-iOS.html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>NSURLConnection vs NSURLSession</title>
        <description>&lt;p&gt;NSURLConnection vs NSURLSession&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/NetworkingOverview/WorkingWithHTTPAndHTTPSRequests/WorkingWithHTTPAndHTTPSRequests.html#//apple_ref/doc/uid/TP40010220-CH8-SW1&quot;&gt;Networking Overview Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Retrieving the Contents of a URL with Delegates
If your app needs more control over your request, such as controlling whether redirects are followed, performing custom authentication, or obtaining the data piecewise as it is received, you can use the NSURLSession class with a custom delegate. For compatibility with earlier versions of OS X and iOS, you can also use the NSURLConnection class with a custom delegate.&lt;/p&gt;

&lt;p&gt;For the most part, the NSURLSession and NSURLConnection classes work similarly at a high level. However, there are a few significant differences:&lt;/p&gt;

&lt;p&gt;The NSURLSession API provides support for download tasks that behave much like the NSURLDownload class. This usage is described further in Downloading the Contents of a URL to Disk.
When you create an NSURLSession object, you provide a reusable configuration object that encapsulates many common configuration options. With NSURLConnection, you must set those options on each connection independently.
An NSURLConnection object handles a single request and any follow-on requests.
An NSURLSession object manages multiple tasks, each of which represents a single URL request and any follow-on requests. You usually create a session when your app launches, then create tasks in much the same way that you would create NSURLConnection objects.&lt;/p&gt;

&lt;p&gt;With NSURLConnection, each connection object has a separate delegate. With NSURLSession, the delegate is shared across all tasks within a session. If you need to use a different delegate, you must create a new session.
When you initialize an NSURLSession or NSURLConnection object, the connection or session is automatically scheduled in the current run loop in the default run loop mode.&lt;/p&gt;

&lt;p&gt;The delegate you provide receives notifications throughout the connection process, including intermittent calls to the URLSession:dataTask:didReceiveData: or connection:didReceiveData: method when a connection receives additional data from the server. It is the delegate’s responsibility to keep track of the data it has already received, if necessary. As a rule:&lt;/p&gt;

&lt;p&gt;If the data can be processed a piece at a time, do so. For example, you might use a streaming XML parser.
If the data is small, you might append it to an NSMutableData object.
If the data is large, you should write it to a file and process it upon completion of the transfer.
When the URLSession:task:didCompleteWithError: or connectionDidFinishLoading: method is called, the delegate has received the entirety of the URL’s contents.&lt;/p&gt;

</description>
        <pubDate>Mon, 19 Sep 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/09/19/NSURLSession-vs-NSURLConnection.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/09/19/NSURLSession-vs-NSURLConnection.html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
  </channel>
</rss>
