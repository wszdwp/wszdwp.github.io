<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codingpan&#39;s Blog</title>
    <description></description>
    <link>/wszdwp.github.io/</link>
    <atom:link href="/wszdwp.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 11 May 2016 08:49:51 -0400</pubDate>
    <lastBuildDate>Wed, 11 May 2016 08:49:51 -0400</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>When to unregister your broadcastreceiver</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/components/bound-services.html#Additional_Notes&quot;&gt;Some practice notice in implementing bound service&lt;/a&gt;
You should usually pair the binding and unbinding during matching bring-up and tear-down moments of the client’s lifecycle. 
For example:
If you only need to interact with the service while your activity is visible, you should bind during onStart() and unbind during onStop().&lt;/p&gt;

&lt;p&gt;If you want your activity to receive responses even while it is stopped in the background, then you can bind during onCreate() and unbind during onDestroy(). Beware that this implies that your activity needs to use the service the entire time it’s running (even in the background), so if the service is in another process, then you increase the weight of the process and it becomes more likely that the system will kill it.&lt;/p&gt;

&lt;p&gt;Note: You should usually not bind and unbind during your activity’s onResume() and onPause(), because these callbacks occur at every lifecycle transition and you should keep the processing that occurs at these transitions to a minimum. Also, if multiple activities in your application bind to the same service and there is a transition between two of those activities, the service may be destroyed and recreated as the current activity unbinds (during pause) before the next one binds (during resume). (This activity transition for how activities coordinate their lifecycles is described in the Activities document.)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.android.com/training/articles/memory.html#ReleaseMemoryAsUiGone&quot;&gt;Release memory when your user interface becomes hidden&lt;/a&gt;
When the user navigates to a different app and your UI is no longer visible, you should release any resources that are used by only your UI. Releasing UI resources at this time can significantly increase the system’s capacity for cached processes, which has a direct impact on the quality of the user experience.&lt;/p&gt;

&lt;p&gt;To be notified when the user exits your UI, implement the onTrimMemory() callback in your Activity classes. You should use this method to listen for the TRIM_MEMORY_UI_HIDDEN level, which indicates your UI is now hidden from view and you should free resources that only your UI uses.&lt;/p&gt;

&lt;p&gt;Notice that your app receives the onTrimMemory() callback with TRIM_MEMORY_UI_HIDDEN only when all the UI components of your app process become hidden from the user. This is distinct from the onStop() callback, which is called when an Activity instance becomes hidden, which occurs even when the user moves to another activity in your app. So although you should implement onStop() to release activity resources such as a network connection or to unregister broadcast receivers, you usually should not release your UI resources until you receive onTrimMemory(TRIM_MEMORY_UI_HIDDEN). This ensures that if the user navigates back from another activity in your app, your UI resources are still available to resume the activity quickly.&lt;/p&gt;

&lt;p&gt;Refs
&lt;a href=&quot;http://stackoverflow.com/questions/7887169/android-when-to-register-unregister-broadcast-receivers-created-in-an-activity&quot;&gt;android-when-to-register-unregister-broadcast-receivers-created-in-an-activity&lt;/a&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/7475356/is-oncreate-called-when-an-activity-object-is-created&quot;&gt;Activity life cycle&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 09 May 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/05/09/When-to-Unregister-Your-BroadcastReceiver-in-Android.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/05/09/When-to-Unregister-Your-BroadcastReceiver-in-Android.html</guid>
        
        <category>Android</category>
        
        
      </item>
    
      <item>
        <title>High freqency algorithm questions in interview</title>
        <description>&lt;p&gt;High freqency algorithm questions in interview&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;longest palindrome
Best Solu: dp解的&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;两个词的最短距离变体
follow up词很多怎么省空间。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;LC原题股票I&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;4.）一个矩阵斜着走的list例子如下：
123
456
789
输出：{1}{42}{753}{86}{9}&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;max sum subarray
我用了sum = nums[i] + (sum &amp;gt; 0 ? sum : 0)，&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Binary Tree Vertical Order Traversal
Queue BFS,用dictionary记录每一个node的column.用一个mincolumn和一个maxcolumn记录最大最小的column.然后遍历dictionary打印。
打印的时候 while(!dic.isempty() &amp;amp;&amp;amp; current &amp;lt;=maxcolumn){if(!dic.containskey(current) break; else print;} 后被告知1. 不需要maxcolumn, 2. dic里面的column肯定连续，所以if check不需要。想了一下确实是，楼主sb了，写了两个多余的判断
map（不是unordered_map)会更简单一点吧&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1.anagram, 输出一个句子, 里面的单词是空格隔开, 输出list of anagram in this sentence. 就是List&amp;lt;List&lt;string&gt;&amp;gt;.&lt;/string&gt;&lt;/p&gt;

&lt;p&gt;2.sort colors, 三色旗问题, 用swap, O(n)时间, O(1)空间.&lt;/p&gt;

&lt;p&gt;3.Pow&lt;/p&gt;

&lt;p&gt;4.给一堆point(x, y), 返回前k个离远点最近的点, 用k-selection算法, 核心就是那个partition, 平均时间复杂度可以做到O(n).&lt;/p&gt;

&lt;p&gt;5.实现哈希表, 只实现lookup()和add()&lt;/p&gt;

&lt;p&gt;6.树的中序遍历和前序遍历的iterative代码.&lt;/p&gt;

&lt;p&gt;7.二叉树的traverse by level和print in vertical order. 前面那个简单, 就是BFS, 后面这个要先遍历, 边遍历边给每个节点一个index, 比如root为0, 做left减1, right加1. 然后建立一个HashMap, key是index, value是list&lt;treenode&gt;&lt;/treenode&gt;&lt;/p&gt;

&lt;p&gt;8.检测一个图是否是二分图, 就是BFS, 然后给每个节点上色.&lt;/p&gt;

&lt;p&gt;9.找名人问题.&lt;/p&gt;

&lt;p&gt;10.会议室问题, 给一堆会议室的schedule(starTtime, endTime), 算出需要几个会议室才能满足要求. 解法就是新建一个class{time, isStart}, 把schedule转化成这个class, 然后对这些时间进行排序, time相同时,end排在start前面, 然后对这个排序好的list进行遍历, 需要start, meeting_room_num++, 遇到end –. 得到max&lt;/p&gt;

&lt;p&gt;11.给一个每行和每列都排序好的矩阵, 求第k大的数值. 可以用heap做.&lt;/p&gt;

&lt;p&gt;12.Lowest common ancestor, 注意要写CTCI上面那个代码, 输入可能不来自同一棵树.&lt;/p&gt;

&lt;p&gt;13.给一个span(min, max)和BST, 返回一个子树, 子树里面的节点都在这个span里面.&lt;/p&gt;

&lt;p&gt;14.jump river的题目, 给一个数组[1,0,1,0,1], 1代表可以站, 0不可以站. 从速度为1开始往前跳, 每次跳的时候, 可以跳当前速度那么多格, 也可以跳当前速度+1那么多格. 问最少跳几次可以跳过河(即跳出数组), 或者跳不过河. 解法直接递归+cache就可以. 上面的例子跳2次就能跳过河了, 第一次从index=0, 速度为1跳到2, 然后速度为2刚好跳出去.&lt;/p&gt;

&lt;p&gt;Facebook onsite的时候还有一轮Culture Fit面试, 除了讲讲你的简历, 下面几个问题经常会问到:
1.为什么选Facebook?
2.给FB的一个产品提点改进意见.
3.当你和你的同事有冲突了, 怎么解决? (focus on “let the code talk”)
4.最近在读什么书?&lt;/p&gt;

&lt;p&gt;Refs:
&lt;a href=&quot;http://www.1point3acres.com/bbs/thread-96088-1-1.html&quot;&gt;http://www.1point3acres.com/bbs/thread-96088-1-1.html&lt;/a&gt;
&lt;a href=&quot;http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/#algo2&quot;&gt;http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/#algo2&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 08 May 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/05/08/High-Freqency-Algorithm-Questions-in-Interview.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/05/08/High-Freqency-Algorithm-Questions-in-Interview.html</guid>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>Grand Central Dispatch Notes</title>
        <description>&lt;p&gt;Grand Central Dispatch (GCD) queues
Used to perform tasks on separate threads Asynchronously or Synchronously&lt;/p&gt;

&lt;p&gt;References:
&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Conceptual/ConcurrencyProgrammingGuide/OperationQueues/OperationQueues.html&quot;&gt;Apple Docs&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Apr 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/04/29/Grand-Central-Dispatch-Notes.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/04/29/Grand-Central-Dispatch-Notes.html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>Download image with url in Swift</title>
        <description>&lt;h1 id=&quot;swift&quot;&gt;Swift&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageURLStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;https://avatars3.githubusercontent.com/u/3345765?v=3&amp;amp;s=460&amp;quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//Image url&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;dispatch_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatch_get_global_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DISPATCH_QUEUE_PRIORITY_DEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageURLStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;NSData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;contentsOfURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;dispatch_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatch_get_main_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;NoImageFound.png&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;forState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UIControlState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;forState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UIControlState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;References:
&lt;a href=&quot;http://stackoverflow.com/questions/24231680/loading-downloading-image-from-url-on-swift#27517280&quot;&gt;SO answer&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Apr 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/04/29/Download-Image-With-URL-In-Swift.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/04/29/Download-Image-With-URL-In-Swift.html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>Lib Bridging Header Building Setting In Xcode</title>
        <description>&lt;p&gt;CGRect  viewRect = CGRectMake(10, 10, 100, 100);
UIView* myView = [[UIView alloc] initWithFrame:viewRect];&lt;/p&gt;

&lt;p&gt;//:configuration = Debug
SWIFT_OBJC_BRIDGING_HEADER = $(SRCROOT)/$(PROJECT_NAME)/$(PROJECT_NAME)-Bridging-Header.h&lt;/p&gt;

&lt;p&gt;//:configuration = Release
SWIFT_OBJC_BRIDGING_HEADER = $(SRCROOT)/$(PROJECT_NAME)/$(PROJECT_NAME)-Bridging-Header.h&lt;/p&gt;

&lt;p&gt;//:completeSettings = some
SWIFT_OBJC_BRIDGING_HEADER&lt;/p&gt;

&lt;h1 id=&quot;ifndef-s2kmobileformss2kmobileformsbridgingheaderh&quot;&gt;ifndef S2kMobileForms_S2kMobileForms_Bridging_Header_h&lt;/h1&gt;
&lt;p&gt;#define S2kMobileForms_S2kMobileForms_Bridging_Header_h&lt;/p&gt;

&lt;h1 id=&quot;endif&quot;&gt;endif&lt;/h1&gt;

&lt;h1 id=&quot;import-reachabilityh&quot;&gt;import “Reachability.h”&lt;/h1&gt;
&lt;p&gt;#import &amp;lt;CommonCrypto/CommonCrypto.h&amp;gt;
#import “sqlite3.h”
#import &amp;lt;YAJLiOS/YAJL.h&amp;gt;
#import “SignatureViewController.h”&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Mar 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/03/28/lib-Bridging-Header-Building-Setting-in-Xcode.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/03/28/lib-Bridging-Header-Building-Setting-in-Xcode.html</guid>
        
        
      </item>
    
      <item>
        <title>Lib Search Path In Xcode</title>
        <description>
&lt;p&gt;```
//:configuration = Debug
LIBRARY_SEARCH_PATHS = $(inherited) $(PROJECT_DIR)/S2kMobileWMS $(PROJECT_DIR)/KDC Scanner&lt;/p&gt;

&lt;p&gt;//:configuration = Release
LIBRARY_SEARCH_PATHS = $(inherited) $(PROJECT_DIR)/S2kMobileWMS $(PROJECT_DIR)/KDC Scanner&lt;/p&gt;

&lt;p&gt;//:completeSettings = some
LIBRARY_SEARCH_PATHS
```&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Mar 2016 00:00:00 -0400</pubDate>
        <link>/wszdwp.github.io/2016/03/24/lib-Search-Path-in-Xcode.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/03/24/lib-Search-Path-in-Xcode.html</guid>
        
        
      </item>
    
      <item>
        <title>Git Source</title>
        <description>&lt;h1 id=&quot;what-is-git&quot;&gt;What is git?&lt;/h1&gt;

&lt;h2 id=&quot;fast-scalable-distributed&quot;&gt;fast, scalable, distributed&lt;/h2&gt;

&lt;h2 id=&quot;revision-control-system&quot;&gt;revision control system&lt;/h2&gt;

&lt;h2 id=&quot;high-level-and-low-level-operations-and-full-access-to-internals&quot;&gt;high level and low level operations and full access to internals&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Porcelain&lt;/li&gt;
  &lt;li&gt;Plumbing&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;history&quot;&gt;History&lt;/h1&gt;
&lt;p&gt;In linux, diff and patch.&lt;/p&gt;

&lt;p&gt;git&lt;/p&gt;

&lt;p&gt;key SHA-1
Value binary files
    commits: a snapshot or head
    trees: dirs, structrue of file system
    blobs: content of files/data&lt;/p&gt;

</description>
        <pubDate>Wed, 02 Mar 2016 00:00:00 -0500</pubDate>
        <link>/wszdwp.github.io/2016/03/02/git-source.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/03/02/git-source.html</guid>
        
        
      </item>
    
      <item>
        <title>OnItemClickListener is not working in listView Android</title>
        <description>&lt;p&gt;Solution:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;android:descendantFocusability=&amp;quot;blocksDescendants&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;what&quot;&gt;What&lt;/h1&gt;
&lt;p&gt;Tap on row of your listView, the OnItemClickListener is not called.&lt;/p&gt;

&lt;h1 id=&quot;how&quot;&gt;How&lt;/h1&gt;
&lt;p&gt;If any row item of list contains focusable or clickable view then OnItemClickListener won’t work.
The row item must have a param like android:descendantFocusability=”blocksDescendants” in order to be getting called.&lt;/p&gt;

&lt;h1 id=&quot;why&quot;&gt;Why&lt;/h1&gt;

&lt;p&gt;references&lt;br /&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/5551042/onitemclicklistener-not-working-in-listview-android&quot;&gt;SO link&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Feb 2016 00:00:00 -0500</pubDate>
        <link>/wszdwp.github.io/2016/02/29/OnItemCLickListener-not-working-in-listview-Android.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/02/29/OnItemCLickListener-not-working-in-listview-Android.html</guid>
        
        <category>Android</category>
        
        
      </item>
    
      <item>
        <title>Datepicker in Android</title>
        <description>&lt;h1 id=&quot;datepicker&quot;&gt;DatePicker&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;showDatePickerDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//currentDateTime&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DatePickerDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DatePickerDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;onDateSetHandeler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;YEAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MONTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DAY_OF_MONTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDatePicker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setMinDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatePickerDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnDateSetListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onDateSetHandeler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatePickerDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnDateSetListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
       &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onDateSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DatePicker&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monthOfYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dayOfMonth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monthOfYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dayOfMonth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
           &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myDateString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;myDateTextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myDateString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;set-up-a-different-time-eg-next-year&quot;&gt;Set up a different time, eg: next year&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;YEAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;date-to-string&quot;&gt;Date to String&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextYear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateFormat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM/dd/yyyy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Locale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;US&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextYearString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nextYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;notice-use-get-in-calendar-date-since-javautildate-getyear-method-is-deprecated&quot;&gt;Notice: use get in calendar date since java.util.Date getYear() method is deprecated&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;YEAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MONTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DAY_OF_MONTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 29 Feb 2016 00:00:00 -0500</pubDate>
        <link>/wszdwp.github.io/2016/02/29/Datepicker-in-Android.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/02/29/Datepicker-in-Android.html</guid>
        
        <category>Android</category>
        
        
      </item>
    
      <item>
        <title>SQL Quick Reference</title>
        <description>&lt;p&gt;At the top level there are mainly 3 types of joins:  &lt;br /&gt;
&lt;strong&gt;INNER JOIN&lt;/strong&gt; - fetches data if present in both the tables&lt;br /&gt;
&lt;strong&gt;OUTER JOIN&lt;/strong&gt;  &lt;br /&gt;
&lt;strong&gt;CROSS JOIN&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;OUTER JOIN are of 3 types:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LEFT OUTER JOIN&lt;/strong&gt; - fetches data if present in the left table.  &lt;br /&gt;
&lt;strong&gt;RIGHT OUTER JOIN&lt;/strong&gt; - fetches data if present in the right table.  &lt;br /&gt;
&lt;strong&gt;FULL OUTER JOIN&lt;/strong&gt; - fetches data if present in either of the two tables.      &lt;br /&gt;
&lt;strong&gt;CROSS JOIN&lt;/strong&gt;, as the name suggests, does [n X m] that joins everything to everything.
Similar to scenario where we simply lists the tables for joining (in the FROM clause of the SELECT statement), using commas to separate them.&lt;/p&gt;

&lt;p&gt;Points to be noted:&lt;/p&gt;

&lt;p&gt;If you just mention JOIN then by default it is a INNER JOIN.
An OUTER join has to be LEFT | RIGHT | FULL you can not simply say OUTER JOIN.
You can drop OUTER keyword and just say LEFT JOIN or RIGHT JOIN or FULL JOIN.&lt;/p&gt;

&lt;p&gt;refs:
&lt;a href=&quot;http://blog.codinghorror.com/a-visual-explanation-of-sql-joins/&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/406294/left-join-and-left-outer-join-in-sql-server&quot;&gt;2&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Jan 2016 00:00:00 -0500</pubDate>
        <link>/wszdwp.github.io/2016/01/15/SQL-quick-reference.html</link>
        <guid isPermaLink="true">/wszdwp.github.io/2016/01/15/SQL-quick-reference.html</guid>
        
        <category>SQL</category>
        
        
      </item>
    
  </channel>
</rss>
